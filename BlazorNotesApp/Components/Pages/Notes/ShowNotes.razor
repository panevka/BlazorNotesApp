@page "/showNotes"
@using BlazorNotesApp.Models
@using BlazorNotesApp.Services
@inject INoteService NoteService
@rendermode InteractiveServer

<h3>Show Notes</h3>

    @if (_notes == null)
    {
        <p>
            <em>Loading...</em>
        </p>
    }
    else
    {
        <table class="table table-primary">
            <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Creation date</th>
                <th colspan="2">Action</th>
            </tr>
            </thead>
            @foreach (Note note in _notes)
            {
                <tr>
                    <td>@note.Id</td>
                    <td>@note.Title</td>
                    <td>@note.CreatedAt</td>
                    <td>
                        <button class="btn btn-primary m-1">Update</button>
                        <button class="btn btn-danger m-1" @onclick="() => DeleteNote(note.Id)">Delete</button>
                    </td>
                </tr>
            }
        </table>
    }
    
@code {
    private List<Note>? _notes = new();
    
    protected override async Task OnInitializedAsync()
    {
        _notes = await NoteService.GetAllNotes();
    }
    
    private async Task DeleteNote(int id)
    {
        await NoteService.DeleteNote(id);
        
        var noteToRemove = _notes?.FirstOrDefault(n => n.Id == id);
        if (noteToRemove != null)
        {
            _notes!.Remove(noteToRemove);
        }
    }
       
}
